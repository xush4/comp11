#include <cmath>
#include <cstdio>
#include <vector>
#include <iostream>
#include <algorithm>
using namespace std;

class Person {
    public :
        string name;
        int age;
        virtual void getdata() {
            /* nothing */
        }
        virtual void putdata() {
            /* nothing */
        }
};

class Professor : public Person {
    public :
        static int objP;
        int publications;
        int cur_id;
        Professor() {
            cur_id = objP++;
        }
        void getdata() {
            cin >> name;
            cin >> age;
            cin >> publications;
        }
        void putdata() {
            cout << name << " " << age << " " << publications << " " << cur_id << endl;
        }
};

class Student : public Person {
    public :
        static int objS;
        int marks[6];
        int cur_id;
        Student() {
            cur_id = objS++;
        }
        void getdata() {
            int i;
            cin >> name;
            cin >> age;
            for(i = 0; i < 6; i++) cin >> marks[i];
        }
        int sum(int m[]) {
            int total = 0;
            int i;
            for(i = 0; i < 6; i++) total = total + m[i];
            return total;
        }
        void putdata() {
            cout << name << " " << age << " " << sum(marks) << " " << cur_id << endl;
        }
};
int Professor::objP = 1;
int Student::objS = 1;

int main(){

    int n, val;
    cin>>n; //The number of objects that is going to be created.
    Person *per[n];

    for(int i = 0;i < n;i++){

        cin>>val;
        if(val == 1){
            // If val is 1 current object is of type Professor
            per[i] = new Professor;

        }
        else per[i] = new Student; // Else the current object is of type Student

        per[i]->getdata(); // Get the data from the user.

    }

    for(int i=0;i<n;i++)
        per[i]->putdata(); // Print the required output for each object.

    return 0;
}